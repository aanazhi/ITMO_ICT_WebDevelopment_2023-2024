{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Task description \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 vue.js \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0432\u0438\u0438 \u0441 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u043e\u0432 \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u044b 3","title":"Task description"},{"location":"#task-description","text":"","title":"Task description"},{"location":"#vuejs-3","text":"","title":"\u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 vue.js \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0432\u0438\u0438 \u0441 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u043e\u0432 \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u044b 3"},{"location":"page1/","text":"MainPage.vue <template> <div class=\"news-list\"> <div v-for=\"newsItem in medicalNews\" :key=\"newsItem.id\" class=\"news-item\"> <h3>{{ newsItem.title }}</h3> <p>{{ newsItem.description }}</p> </div> </div> </template> <script> export default { data() { return { medicalNews: [ { id: 1, title: \"\u0421 \u043d\u043e\u0432\u044b\u043c \u0433\u043e\u0434\u043e\u043c!\", description: \"\u041f\u043e\u0437\u0434\u0440\u0430\u0432\u043b\u044f\u0435\u043c \u0432\u0430\u0441 \u0441 \u043d\u0430\u0441\u0442\u0443\u043f\u0430\u044e\u0449\u0438\u043c \u043f\u0440\u0430\u0437\u0434\u043d\u0438\u043a\u043e\u043c! \u0421\u043f\u0430\u0441\u0438\u0431\u043e, \u0447\u0442\u043e \u0432\u044b\u0431\u0438\u0440\u0430\u0435\u0442\u0435 \u043d\u0430\u0441\" }, { id: 2, title: \"\u041e\u0442\u043a\u0440\u044b\u0442\u0430 \u0437\u0430\u043f\u0438\u0441\u044c \u043d\u0430 \u044f\u043d\u0432\u0430\u0440\u044c 2024\", description: \"\u0413\u0440\u0430\u0444\u0438\u043a \u0440\u0430\u0431\u043e\u0442\u044b \u0432 \u044f\u043d\u0432\u0430\u0440\u044c\u0441\u043a\u0438\u0435 \u043f\u0440\u0430\u0437\u0434\u043d\u0438\u043a\u0438 :1 \u044f\u043d\u0432\u0430\u0440\u044f - \u0432\u044b\u0445\u043e\u0434\u043d\u043e\u0439, \u0441\u043e 2 \u044f\u043d\u0432\u0430\u0440\u044f \u0432 \u043e\u0431\u044b\u0447\u043d\u043e\u043c \u0433\u0440\u0430\u0444\u0438\u043a\u0435 - 10:00-20:00\" }, { id: 3, title: \"\u041d\u043e\u0432\u044b\u0435 \u0432\u0440\u0430\u0447\u0438\", description: \"\u0421\u043a\u0438\u0434\u043a\u0438 \u043d\u0430 \u043f\u0435\u0440\u0432\u043e\u0435 \u043f\u043e\u0441\u0435\u0449\u0435\u043d\u0438\u0435!\" } ], }; } }; </script> <style> .news-list { display: flex; flex-direction: column; align-items: center; max-width: 800px; margin: 0 auto; } .news-item { margin-bottom: 20px; padding: 20px; border: 1px solid #e3e3e3; border-radius: 10px; box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); width: 100%; transition: box-shadow 0.3s ease-in-out; } .news-item:hover { box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); } h3 { margin-top: 0; color: #333; font-size: 24px; } p { color: #555; line-height: 1.5; } </style>","title":"MainPage.vue"},{"location":"page1/#mainpagevue","text":"<template> <div class=\"news-list\"> <div v-for=\"newsItem in medicalNews\" :key=\"newsItem.id\" class=\"news-item\"> <h3>{{ newsItem.title }}</h3> <p>{{ newsItem.description }}</p> </div> </div> </template> <script> export default { data() { return { medicalNews: [ { id: 1, title: \"\u0421 \u043d\u043e\u0432\u044b\u043c \u0433\u043e\u0434\u043e\u043c!\", description: \"\u041f\u043e\u0437\u0434\u0440\u0430\u0432\u043b\u044f\u0435\u043c \u0432\u0430\u0441 \u0441 \u043d\u0430\u0441\u0442\u0443\u043f\u0430\u044e\u0449\u0438\u043c \u043f\u0440\u0430\u0437\u0434\u043d\u0438\u043a\u043e\u043c! \u0421\u043f\u0430\u0441\u0438\u0431\u043e, \u0447\u0442\u043e \u0432\u044b\u0431\u0438\u0440\u0430\u0435\u0442\u0435 \u043d\u0430\u0441\" }, { id: 2, title: \"\u041e\u0442\u043a\u0440\u044b\u0442\u0430 \u0437\u0430\u043f\u0438\u0441\u044c \u043d\u0430 \u044f\u043d\u0432\u0430\u0440\u044c 2024\", description: \"\u0413\u0440\u0430\u0444\u0438\u043a \u0440\u0430\u0431\u043e\u0442\u044b \u0432 \u044f\u043d\u0432\u0430\u0440\u044c\u0441\u043a\u0438\u0435 \u043f\u0440\u0430\u0437\u0434\u043d\u0438\u043a\u0438 :1 \u044f\u043d\u0432\u0430\u0440\u044f - \u0432\u044b\u0445\u043e\u0434\u043d\u043e\u0439, \u0441\u043e 2 \u044f\u043d\u0432\u0430\u0440\u044f \u0432 \u043e\u0431\u044b\u0447\u043d\u043e\u043c \u0433\u0440\u0430\u0444\u0438\u043a\u0435 - 10:00-20:00\" }, { id: 3, title: \"\u041d\u043e\u0432\u044b\u0435 \u0432\u0440\u0430\u0447\u0438\", description: \"\u0421\u043a\u0438\u0434\u043a\u0438 \u043d\u0430 \u043f\u0435\u0440\u0432\u043e\u0435 \u043f\u043e\u0441\u0435\u0449\u0435\u043d\u0438\u0435!\" } ], }; } }; </script> <style> .news-list { display: flex; flex-direction: column; align-items: center; max-width: 800px; margin: 0 auto; } .news-item { margin-bottom: 20px; padding: 20px; border: 1px solid #e3e3e3; border-radius: 10px; box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); width: 100%; transition: box-shadow 0.3s ease-in-out; } .news-item:hover { box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); } h3 { margin-top: 0; color: #333; font-size: 24px; } p { color: #555; line-height: 1.5; } </style>","title":"MainPage.vue"},{"location":"page2/","text":"ProfilePatient.vue <template> <div class=\"profile\"> <h1>\u041f\u0440\u043e\u0444\u0438\u043b\u044c \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430</h1> <div v-if=\"showProfileForm\"> <div class=\"profile-details\"> <p><strong>Email:</strong> {{ email }}</p> <p><strong>\u0418\u043c\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f:</strong> {{ username }}</p> <p><strong>\u041f\u0430\u0440\u043e\u043b\u044c:</strong> {{ password }}</p> <p><strong>\u0418\u043c\u044f:</strong> {{ firstName }}</p> <p><strong>\u0424\u0430\u043c\u0438\u043b\u0438\u044f:</strong> {{ lastName }}</p> <p><strong>\u041e\u0442\u0447\u0435\u0441\u0442\u0432\u043e:</strong> {{ patronymic }}</p> <p><strong>\u0414\u0430\u0442\u0430 \u0440\u043e\u0436\u0434\u0435\u043d\u0438\u044f:</strong> {{ birthDate }}</p> <p><strong>\u041d\u043e\u043c\u0435\u0440 \u043c\u0435\u0434\u0438\u0446\u0438\u043d\u0441\u043a\u043e\u0439 \u043a\u0430\u0440\u0442\u044b:</strong> {{ medicalCardNumber }}</p> </div> </div> <div v-else> <form @submit.prevent=\"getToken\"> <label for=\"first_name\">\u0418\u043c\u044f:</label> <input type=\"text\" id=\"first_name\" v-model=\"firstName\"> <label for=\"last_name\">\u0424\u0430\u043c\u0438\u043b\u0438\u044f:</label> <input type=\"text\" id=\"last_name\" v-model=\"lastName\"> <label for=\"middle_name\">\u041e\u0442\u0447\u0435\u0441\u0442\u0432\u043e:</label> <input type=\"text\" id=\"middle_name\" v-model=\"patronymic\"> <label for=\"date_of_birth\">\u0414\u0430\u0442\u0430 \u0440\u043e\u0436\u0434\u0435\u043d\u0438\u044f:</label> <input type=\"date\" id=\"date_of_birth\" v-model=\"birthDate\"> <label for=\"medical_card_number\">\u041d\u043e\u043c\u0435\u0440 \u043c\u0435\u0434\u0438\u0446\u0438\u043d\u0441\u043a\u043e\u0439 \u043a\u0430\u0440\u0442\u044b:</label> <input type=\"text\" id=\"medical_card_number\" v-model=\"medicalCardNumber\"> <button type=\"submit\">\u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c</button> </form> </div> <button type=\"submit\" @click=\"editProfile()\">\u041e\u0442\u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c</button> </div> <button type=\"button\" @click=\"logout()\" class=\"logout-button\">\u0412\u044b\u0439\u0442\u0438 \u0438\u0437 \u043f\u0440\u043e\u0444\u0438\u043b\u044f</button> </template> <style scoped> .profile { max-width: 500px; margin: 40px auto; padding: 20px; border-radius: 8px; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); background-color: #fff; } h1 { color: #333; margin-bottom: 20px; } .profile-details, form { margin-top: 20px; } .profile-details p, form label { margin-bottom: 10px; color: #333; } strong { font-weight: bold; } button { margin-top: 30px; } input[type=\"text\"], input[type=\"date\"] { width: 100%; padding: 10px; margin-bottom: 20px; border: 1px solid #ddd; border-radius: 4px; box-sizing: border-box; } button { padding: 10px 15px; background-color: #4CAF50; color: white; border: none; border-radius: 4px; cursor: pointer; font-size: 16px; transition: background-color 0.3s ease; } button:hover { background-color: #45a049; } .logout-button { width: 200px; padding: 10px 15px; background-color: #f44336; margin-left: 650px; color: white; border: none; border-radius: 4px; cursor: pointer; font-size: 16px; transition: background-color 0.3s ease; margin-top: 0px; margin-bottom: 20px; } .logout-button:hover { background-color: #d32f2f; } </style> <script> import axios from 'axios'; import router from '@/router'; export default { data() { return { email: '', username: '', password: '', firstName: '', lastName: '', patronymic: '', birthDate: '', medicalCardNumber: '', showProfileForm: false, } }, mounted() { const userData = JSON.parse(localStorage.getItem('userData')); if (userData) { this.id = userData.id; this.email = userData.email; this.username = userData.username; this.password = userData.password; this.firstName = userData.firstName; this.lastName = userData.lastName; this.patronymic = userData.patronymic; this.birthDate = userData.birthDate; this.medicalCardNumber = userData.medicalCardNumber; } }, methods: { getProfile() { const token = localStorage.getItem('token'); axios.get('http://127.0.0.1:8000/api/patients/', { headers: { Authorization: `Token ${token}`, } }) .then(response => { this.id = response.data.id; this.firstName = response.data.first_name; this.lastName = response.data.last_name; this.patronymic = response.data.middle_name; this.birthDate = response.data.date_of_birth; this.medicalCardNumber = response.data.medical_card_number; this.showProfileForm = true; }) .catch(error => { console.error('\u041e\u0448\u0438\u0431\u043a\u0430:', error); }); }, getToken() { axios.post('http://127.0.0.1:8000/auth/token/login', { password: this.password, username: this.username }) .then(response => { const token = response.data.auth_token; this.saveToken(token); this.getProfile(); this.saveProfile(); }) .catch(error => { console.error('\u041e\u0448\u0438\u0431\u043a\u0430:', error); }); }, saveToken(token) { localStorage.setItem('token', token); }, toggleEditForm() { this.editProfile(); this.showProfileForm = !this.showProfileForm; }, saveProfile() { const token = localStorage.getItem('token'); axios.post('http://127.0.0.1:8000/api/patients/', { first_name: this.firstName, last_name: this.lastName, middle_name: this.patronymic, date_of_birth: this.birthDate, medical_card_number: this.medicalCardNumber }, { headers: { Authorization: `Token ${token}` } }) .then(response => { this.id = response.data.id; this.firstName = response.data.first_name; this.lastName = response.data.last_name; this.patronymic = response.data.middle_name; this.birthDate = response.data.date_of_birth; this.medicalCardNumber = response.data.medical_card_number; localStorage.setItem('userData', JSON.stringify({ id: this.id, email: this.email, username: this.username, password: this.password, firstName: this.firstName, lastName: this.lastName, patronymic: this.patronymic, birthDate: this.birthDate, medicalCardNumber: this.medicalCardNumber })); }) .catch(error => { console.error('\u041e\u0448\u0438\u0431\u043a\u0430:', error); }) }, editProfile() { const token = localStorage.getItem('token'); const userData = JSON.parse(localStorage.getItem('userData')); const id = userData.id; axios.put(`http://127.0.0.1:8000/api/patients/${id}/`, { first_name: this.firstName, last_name: this.lastName, middle_name: this.patronymic, date_of_birth: this.birthDate, medical_card_number: this.medicalCardNumber }, { headers: { Authorization: `Token ${token}`, } }) .then(response => { this.firstName = response.data.first_name; this.lastName = response.data.last_name; this.patronymic = response.data.middle_name; this.birthDate = response.data.date_of_birth; this.medicalCardNumber = response.data.medical_card_number; }) .catch(error => { console.error('\u041e\u0448\u0438\u0431\u043a\u0430:', error); }) }, logout() { localStorage.removeItem('token'); localStorage.removeItem('userData'); this.email = ''; this.username = ''; this.password = ''; this.firstName = ''; this.lastName = ''; this.patronymic = ''; this.birthDate = ''; this.medicalCardNumber = ''; this.showProfileForm = false; router.push('/home'); }, } } </script>","title":"ProfilePatient.vue"},{"location":"page2/#profilepatientvue","text":"<template> <div class=\"profile\"> <h1>\u041f\u0440\u043e\u0444\u0438\u043b\u044c \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430</h1> <div v-if=\"showProfileForm\"> <div class=\"profile-details\"> <p><strong>Email:</strong> {{ email }}</p> <p><strong>\u0418\u043c\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f:</strong> {{ username }}</p> <p><strong>\u041f\u0430\u0440\u043e\u043b\u044c:</strong> {{ password }}</p> <p><strong>\u0418\u043c\u044f:</strong> {{ firstName }}</p> <p><strong>\u0424\u0430\u043c\u0438\u043b\u0438\u044f:</strong> {{ lastName }}</p> <p><strong>\u041e\u0442\u0447\u0435\u0441\u0442\u0432\u043e:</strong> {{ patronymic }}</p> <p><strong>\u0414\u0430\u0442\u0430 \u0440\u043e\u0436\u0434\u0435\u043d\u0438\u044f:</strong> {{ birthDate }}</p> <p><strong>\u041d\u043e\u043c\u0435\u0440 \u043c\u0435\u0434\u0438\u0446\u0438\u043d\u0441\u043a\u043e\u0439 \u043a\u0430\u0440\u0442\u044b:</strong> {{ medicalCardNumber }}</p> </div> </div> <div v-else> <form @submit.prevent=\"getToken\"> <label for=\"first_name\">\u0418\u043c\u044f:</label> <input type=\"text\" id=\"first_name\" v-model=\"firstName\"> <label for=\"last_name\">\u0424\u0430\u043c\u0438\u043b\u0438\u044f:</label> <input type=\"text\" id=\"last_name\" v-model=\"lastName\"> <label for=\"middle_name\">\u041e\u0442\u0447\u0435\u0441\u0442\u0432\u043e:</label> <input type=\"text\" id=\"middle_name\" v-model=\"patronymic\"> <label for=\"date_of_birth\">\u0414\u0430\u0442\u0430 \u0440\u043e\u0436\u0434\u0435\u043d\u0438\u044f:</label> <input type=\"date\" id=\"date_of_birth\" v-model=\"birthDate\"> <label for=\"medical_card_number\">\u041d\u043e\u043c\u0435\u0440 \u043c\u0435\u0434\u0438\u0446\u0438\u043d\u0441\u043a\u043e\u0439 \u043a\u0430\u0440\u0442\u044b:</label> <input type=\"text\" id=\"medical_card_number\" v-model=\"medicalCardNumber\"> <button type=\"submit\">\u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c</button> </form> </div> <button type=\"submit\" @click=\"editProfile()\">\u041e\u0442\u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c</button> </div> <button type=\"button\" @click=\"logout()\" class=\"logout-button\">\u0412\u044b\u0439\u0442\u0438 \u0438\u0437 \u043f\u0440\u043e\u0444\u0438\u043b\u044f</button> </template> <style scoped> .profile { max-width: 500px; margin: 40px auto; padding: 20px; border-radius: 8px; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); background-color: #fff; } h1 { color: #333; margin-bottom: 20px; } .profile-details, form { margin-top: 20px; } .profile-details p, form label { margin-bottom: 10px; color: #333; } strong { font-weight: bold; } button { margin-top: 30px; } input[type=\"text\"], input[type=\"date\"] { width: 100%; padding: 10px; margin-bottom: 20px; border: 1px solid #ddd; border-radius: 4px; box-sizing: border-box; } button { padding: 10px 15px; background-color: #4CAF50; color: white; border: none; border-radius: 4px; cursor: pointer; font-size: 16px; transition: background-color 0.3s ease; } button:hover { background-color: #45a049; } .logout-button { width: 200px; padding: 10px 15px; background-color: #f44336; margin-left: 650px; color: white; border: none; border-radius: 4px; cursor: pointer; font-size: 16px; transition: background-color 0.3s ease; margin-top: 0px; margin-bottom: 20px; } .logout-button:hover { background-color: #d32f2f; } </style> <script> import axios from 'axios'; import router from '@/router'; export default { data() { return { email: '', username: '', password: '', firstName: '', lastName: '', patronymic: '', birthDate: '', medicalCardNumber: '', showProfileForm: false, } }, mounted() { const userData = JSON.parse(localStorage.getItem('userData')); if (userData) { this.id = userData.id; this.email = userData.email; this.username = userData.username; this.password = userData.password; this.firstName = userData.firstName; this.lastName = userData.lastName; this.patronymic = userData.patronymic; this.birthDate = userData.birthDate; this.medicalCardNumber = userData.medicalCardNumber; } }, methods: { getProfile() { const token = localStorage.getItem('token'); axios.get('http://127.0.0.1:8000/api/patients/', { headers: { Authorization: `Token ${token}`, } }) .then(response => { this.id = response.data.id; this.firstName = response.data.first_name; this.lastName = response.data.last_name; this.patronymic = response.data.middle_name; this.birthDate = response.data.date_of_birth; this.medicalCardNumber = response.data.medical_card_number; this.showProfileForm = true; }) .catch(error => { console.error('\u041e\u0448\u0438\u0431\u043a\u0430:', error); }); }, getToken() { axios.post('http://127.0.0.1:8000/auth/token/login', { password: this.password, username: this.username }) .then(response => { const token = response.data.auth_token; this.saveToken(token); this.getProfile(); this.saveProfile(); }) .catch(error => { console.error('\u041e\u0448\u0438\u0431\u043a\u0430:', error); }); }, saveToken(token) { localStorage.setItem('token', token); }, toggleEditForm() { this.editProfile(); this.showProfileForm = !this.showProfileForm; }, saveProfile() { const token = localStorage.getItem('token'); axios.post('http://127.0.0.1:8000/api/patients/', { first_name: this.firstName, last_name: this.lastName, middle_name: this.patronymic, date_of_birth: this.birthDate, medical_card_number: this.medicalCardNumber }, { headers: { Authorization: `Token ${token}` } }) .then(response => { this.id = response.data.id; this.firstName = response.data.first_name; this.lastName = response.data.last_name; this.patronymic = response.data.middle_name; this.birthDate = response.data.date_of_birth; this.medicalCardNumber = response.data.medical_card_number; localStorage.setItem('userData', JSON.stringify({ id: this.id, email: this.email, username: this.username, password: this.password, firstName: this.firstName, lastName: this.lastName, patronymic: this.patronymic, birthDate: this.birthDate, medicalCardNumber: this.medicalCardNumber })); }) .catch(error => { console.error('\u041e\u0448\u0438\u0431\u043a\u0430:', error); }) }, editProfile() { const token = localStorage.getItem('token'); const userData = JSON.parse(localStorage.getItem('userData')); const id = userData.id; axios.put(`http://127.0.0.1:8000/api/patients/${id}/`, { first_name: this.firstName, last_name: this.lastName, middle_name: this.patronymic, date_of_birth: this.birthDate, medical_card_number: this.medicalCardNumber }, { headers: { Authorization: `Token ${token}`, } }) .then(response => { this.firstName = response.data.first_name; this.lastName = response.data.last_name; this.patronymic = response.data.middle_name; this.birthDate = response.data.date_of_birth; this.medicalCardNumber = response.data.medical_card_number; }) .catch(error => { console.error('\u041e\u0448\u0438\u0431\u043a\u0430:', error); }) }, logout() { localStorage.removeItem('token'); localStorage.removeItem('userData'); this.email = ''; this.username = ''; this.password = ''; this.firstName = ''; this.lastName = ''; this.patronymic = ''; this.birthDate = ''; this.medicalCardNumber = ''; this.showProfileForm = false; router.push('/home'); }, } } </script>","title":"ProfilePatient.vue"},{"location":"page3/","text":"DoctorList.vue <template> <div> <div class=\"mb-3\"> <input type=\"text\" v-model=\"searchSpecialty\" placeholder=\"Search by specialty\" class=\"form-control\"> </div> <div class=\"row\"> <div class=\"col-md-4 mb-3\" v-for=\"doctor in filteredDoctors\" :key=\"doctor.id\"> <div class=\"card\"> <div class=\"card-body\"> <h5 class=\"card-title\">{{ doctor.last_name }} {{ doctor.first_name }} {{ doctor.middle_name }}</h5> <p class=\"card-text\">\u0421\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u044c: {{ doctor.specialty }}</p> <p class=\"card-text\">\u041e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435: {{ doctor.education }}</p> </div> </div> </div> </div> </div> </template> <style scoped> .mb-3 input[type=\"text\"] { border-radius: 5px; border: 1px solid #ced4da; padding: 10px; font-size: 16px; } .card { box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); border-radius: 10px; overflow: hidden; transition: transform 0.3s ease-in-out, box-shadow 0.3s ease-in-out; } .card:hover { transform: translateY(-5px); box-shadow: 0 6px 12px rgba(0, 0, 0, 0.2); } .card-body { padding: 15px; } .card-title { margin-bottom: 10px; color: #333; font-size: 20px; font-weight: bold; } .card-text { color: #555; font-size: 16px; margin-bottom: 5px; } </style> <script> import axios from 'axios'; export default { data() { return { doctors: [], searchSpecialty: '', }; }, computed: { filteredDoctors() { return this.doctors.filter(doctor => { return doctor.specialty.toLowerCase().includes(this.searchSpecialty.toLowerCase()); }); } }, mounted() { const url = 'http://127.0.0.1:8000/api/doctors/'; const token = '5f48f363d33088d0870df16233ee16cbe7650dfc'; const config = { headers: { Authorization: `Token ${token}` } }; axios.get(url, config) .then(response => { this.doctors = response.data; }) .catch(error => { console.error('Error fetching doctors:', error); }); } }; </script> <style> .card { border: 1px solid #ccc; border-radius: 5px; margin-bottom: 15px; } .card-title { font-size: 1.25rem; margin-bottom: 0.5rem; } .card-text { color: #666; } </style>","title":"DoctorList.vue"},{"location":"page3/#doctorlistvue","text":"<template> <div> <div class=\"mb-3\"> <input type=\"text\" v-model=\"searchSpecialty\" placeholder=\"Search by specialty\" class=\"form-control\"> </div> <div class=\"row\"> <div class=\"col-md-4 mb-3\" v-for=\"doctor in filteredDoctors\" :key=\"doctor.id\"> <div class=\"card\"> <div class=\"card-body\"> <h5 class=\"card-title\">{{ doctor.last_name }} {{ doctor.first_name }} {{ doctor.middle_name }}</h5> <p class=\"card-text\">\u0421\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u044c: {{ doctor.specialty }}</p> <p class=\"card-text\">\u041e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435: {{ doctor.education }}</p> </div> </div> </div> </div> </div> </template> <style scoped> .mb-3 input[type=\"text\"] { border-radius: 5px; border: 1px solid #ced4da; padding: 10px; font-size: 16px; } .card { box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); border-radius: 10px; overflow: hidden; transition: transform 0.3s ease-in-out, box-shadow 0.3s ease-in-out; } .card:hover { transform: translateY(-5px); box-shadow: 0 6px 12px rgba(0, 0, 0, 0.2); } .card-body { padding: 15px; } .card-title { margin-bottom: 10px; color: #333; font-size: 20px; font-weight: bold; } .card-text { color: #555; font-size: 16px; margin-bottom: 5px; } </style> <script> import axios from 'axios'; export default { data() { return { doctors: [], searchSpecialty: '', }; }, computed: { filteredDoctors() { return this.doctors.filter(doctor => { return doctor.specialty.toLowerCase().includes(this.searchSpecialty.toLowerCase()); }); } }, mounted() { const url = 'http://127.0.0.1:8000/api/doctors/'; const token = '5f48f363d33088d0870df16233ee16cbe7650dfc'; const config = { headers: { Authorization: `Token ${token}` } }; axios.get(url, config) .then(response => { this.doctors = response.data; }) .catch(error => { console.error('Error fetching doctors:', error); }); } }; </script> <style> .card { border: 1px solid #ccc; border-radius: 5px; margin-bottom: 15px; } .card-title { font-size: 1.25rem; margin-bottom: 0.5rem; } .card-text { color: #666; } </style>","title":"DoctorList.vue"},{"location":"page4/","text":"MyAppointments.vue <template> <div class=\"appointment-form-container\"> <h2>\u0417\u0430\u043f\u0438\u0441\u044c \u043d\u0430 \u043f\u0440\u0438\u0435\u043c</h2> <form @submit.prevent=\"getProfile\" class=\"appointment-form\"> <label for=\"date_time\">\u0414\u0430\u0442\u0430 \u0438 \u0432\u0440\u0435\u043c\u044f \u043f\u0440\u0438\u0435\u043c\u0430:</label><br> <input type=\"datetime-local\" id=\"date_time\" v-model=\"appointmentData.date_time\"><br> <label for=\"diagnosis\">\u0414\u0438\u0430\u0433\u043d\u043e\u0437, \u0437\u0430\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f \u0432\u0440\u0430\u0447\u043e\u043c \u043f\u043e\u0441\u043b\u0435 \u043f\u0440\u0438\u0435\u043c\u0430:</label><br> <input type=\"text\" id=\"diagnosis\" v-model=\"appointmentData.diagnosis\"><br> <label for=\"current_condition\">\u0421\u0438\u043c\u043f\u0442\u043e\u043c\u044b:</label><br> <input type=\"text\" id=\"current_condition\" v-model=\"appointmentData.current_condition\"><br> <label for=\"treatment_recommendations\">\u0420\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0430\u0446\u0438\u0438, \u0437\u0430\u043f\u043e\u043b\u043d\u044f\u044e\u0442\u0441\u044f \u0432\u0440\u0430\u0447\u043e\u043c \u043f\u043e\u0441\u043b\u0435 \u043f\u0440\u0438\u0435\u043c\u0430:</label><br> <input type=\"text\" id=\"treatment_recommendations\" v-model=\"appointmentData.treatment_recommendations\"><br> <label for=\"doctor\">\u0412\u0440\u0430\u0447:</label><br> <select v-model=\"appointmentData.doctor\"> <option v-for=\"doctor in doctors\" :key=\"doctor.id\" :value=\"doctor.id\">{{ doctor.last_name }}</option> </select><br> <label for=\"patient\">\u041f\u0430\u0446\u0438\u0435\u043d\u0442:</label><br> <select v-model=\"appointmentData.patient\"> <option v-for=\"patient in patients\" :key=\"patient.id\" :value=\"patient.id\">{{ patient.last_name }}</option> </select><br> <label for=\"cabinet\">\u041a\u0430\u0431\u0438\u043d\u0435\u0442:</label><br> <select v-model=\"appointmentData.cabinet\"> <option v-for=\"cabinet in cabinets\" :key=\"cabinet.id\" :value=\"cabinet.id\">{{ cabinet.name }}</option> </select><br> <input type=\"submit\" value=\"\u0417\u0430\u043f\u0438\u0441\u0430\u0442\u044c\u0441\u044f\"> </form> <button @click=\"goto\">\u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u043c\u043e\u0438 \u0437\u0430\u043f\u0438\u0441\u0438</button> </div> </template> <style scoped> .appointment-form-container { max-width: 500px; margin: 20px auto; padding: 20px; border-radius: 8px; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); background-color: #fff; } h2 { text-align: center; color: #333; margin-bottom: 20px; } .appointment-form label { display: block; margin-bottom: 5px; color: #333; font-weight: bold; } .appointment-form input[type=\"text\"], .appointment-form input[type=\"datetime-local\"], .appointment-form select { width: 100%; padding: 10px; margin-bottom: 20px; border: 1px solid #ccc; border-radius: 4px; box-sizing: border-box; } .appointment-form input[type=\"submit\"] { width: 100%; padding: 10px 15px; background-color: #4CAF50; color: white; border: none; border-radius: 4px; cursor: pointer; font-size: 16px; transition: background-color 0.3s ease; } .appointment-form input[type=\"submit\"]:hover { background-color: #45a049; } </style> <script> import router from '@/router'; import axios from 'axios'; export default { data() { return { doctors: [], patients: [], cabinets: [], token: null, appointmentData: { date_time: '', diagnosis: '', current_condition: '', treatment_recommendations: '', doctor: '', patient: '', cabinet: '', }, }; }, mounted() { this.loginAndGetToken().then(() => { if (this.token) { this.getDoctors(); this.getPatients(); this.getCabinets(); } else { console.error('\u0422\u043e\u043a\u0435\u043d \u043d\u0435 \u043f\u043e\u043b\u0443\u0447\u0435\u043d. \u041f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435 \u0443\u0447\u0435\u0442\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438 \u043f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u0435 \u043f\u043e\u043f\u044b\u0442\u043a\u0443.'); } }); }, methods: { async loginAndGetToken() { try { const userData = JSON.parse(localStorage.getItem('userData')); if (!userData || !userData.username || !userData.password) { console.error('\u0414\u0430\u043d\u043d\u044b\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u044b \u0432 localStorage.'); return; } console.log('\u041e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 \u0434\u0430\u043d\u043d\u044b\u0445 \u0434\u043b\u044f \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438:', userData); const response = await axios.post('http://127.0.0.1:8000/auth/token/login/', { username: userData.username, password: userData.password, }); if (response.data && response.data.auth_token) { this.token = response.data.auth_token; } else { console.error('\u0422\u043e\u043a\u0435\u043d \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u0432 \u043e\u0442\u0432\u0435\u0442\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u0430:', response.data); } } catch (error) { console.error('\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0438 \u0442\u043e\u043a\u0435\u043d\u0430:', error.response ? error.response.data : error); } }, getDoctors() { axios.get('http://127.0.0.1:8000/api/doctors/', { headers: { Authorization: `Token ${this.token}` } }) .then(response => { this.doctors = response.data; }) .catch(error => { console.error('\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0438 \u0441\u043f\u0438\u0441\u043a\u0430 \u0432\u0440\u0430\u0447\u0435\u0439:', error); }); }, getPatients() { axios.get('http://127.0.0.1:8000/api/patients/', { headers: { Authorization: `Token ${this.token}` } }) .then(response => { this.patients = response.data; }) .catch(error => { console.error('\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0438 \u0441\u043f\u0438\u0441\u043a\u0430 \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u043e\u0432:', error); }); }, getCabinets() { axios.get('http://127.0.0.1:8000/api/cabinets/', { headers: { Authorization: `Token ${this.token}` } }) .then(response => { this.cabinets = response.data; }) .catch(error => { console.error('\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0438 \u0441\u043f\u0438\u0441\u043a\u0430 \u043a\u0430\u0431\u0438\u043d\u0435\u0442\u043e\u0432:', error); }); }, getProfile() { axios.get('http://127.0.0.1:8000/api/appointments/', { headers: { Authorization: `Token ${this.token}`, } }) .then(response => { this.date_time = response.data.date_time; this.diagnosis = response.data.diagnosis; this.current_condition = response.data.current_condition; this.treatment_recommendations = response.data.treatment_recommendations; this.doctor = response.data.doctor; this.patient = response.data.patient; this.cabinet = response.data.cabinet; this.saveProfile(); router.push('/registerdoctor'); }) .catch(error => { console.error('\u041e\u0448\u0438\u0431\u043a\u0430:', error); }); }, saveProfile() { console.log('\u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435:', this.appointmentData); axios.post('http://127.0.0.1:8000/api/appointments/', this.appointmentData, { headers: { Authorization: `Token ${this.token}` } }) .then(response => { this.date_time = response.data.date_time; this.diagnosis = response.data.diagnosis; this.current_condition = response.data.current_condition; this.treatment_recommendations = response.data.treatment_recommendations; this.doctor = response.doctor; this.patient = response.data.patient; this.cabinet = response.data.cabinet; }) .catch(error => { console.error('\u041e\u0448\u0438\u0431\u043a\u0430:', error); }) }, goto(){ router.push('/registerdoctor'); }, } } </script>","title":"MyAppointments.vue"},{"location":"page4/#myappointmentsvue","text":"<template> <div class=\"appointment-form-container\"> <h2>\u0417\u0430\u043f\u0438\u0441\u044c \u043d\u0430 \u043f\u0440\u0438\u0435\u043c</h2> <form @submit.prevent=\"getProfile\" class=\"appointment-form\"> <label for=\"date_time\">\u0414\u0430\u0442\u0430 \u0438 \u0432\u0440\u0435\u043c\u044f \u043f\u0440\u0438\u0435\u043c\u0430:</label><br> <input type=\"datetime-local\" id=\"date_time\" v-model=\"appointmentData.date_time\"><br> <label for=\"diagnosis\">\u0414\u0438\u0430\u0433\u043d\u043e\u0437, \u0437\u0430\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f \u0432\u0440\u0430\u0447\u043e\u043c \u043f\u043e\u0441\u043b\u0435 \u043f\u0440\u0438\u0435\u043c\u0430:</label><br> <input type=\"text\" id=\"diagnosis\" v-model=\"appointmentData.diagnosis\"><br> <label for=\"current_condition\">\u0421\u0438\u043c\u043f\u0442\u043e\u043c\u044b:</label><br> <input type=\"text\" id=\"current_condition\" v-model=\"appointmentData.current_condition\"><br> <label for=\"treatment_recommendations\">\u0420\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0430\u0446\u0438\u0438, \u0437\u0430\u043f\u043e\u043b\u043d\u044f\u044e\u0442\u0441\u044f \u0432\u0440\u0430\u0447\u043e\u043c \u043f\u043e\u0441\u043b\u0435 \u043f\u0440\u0438\u0435\u043c\u0430:</label><br> <input type=\"text\" id=\"treatment_recommendations\" v-model=\"appointmentData.treatment_recommendations\"><br> <label for=\"doctor\">\u0412\u0440\u0430\u0447:</label><br> <select v-model=\"appointmentData.doctor\"> <option v-for=\"doctor in doctors\" :key=\"doctor.id\" :value=\"doctor.id\">{{ doctor.last_name }}</option> </select><br> <label for=\"patient\">\u041f\u0430\u0446\u0438\u0435\u043d\u0442:</label><br> <select v-model=\"appointmentData.patient\"> <option v-for=\"patient in patients\" :key=\"patient.id\" :value=\"patient.id\">{{ patient.last_name }}</option> </select><br> <label for=\"cabinet\">\u041a\u0430\u0431\u0438\u043d\u0435\u0442:</label><br> <select v-model=\"appointmentData.cabinet\"> <option v-for=\"cabinet in cabinets\" :key=\"cabinet.id\" :value=\"cabinet.id\">{{ cabinet.name }}</option> </select><br> <input type=\"submit\" value=\"\u0417\u0430\u043f\u0438\u0441\u0430\u0442\u044c\u0441\u044f\"> </form> <button @click=\"goto\">\u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u043c\u043e\u0438 \u0437\u0430\u043f\u0438\u0441\u0438</button> </div> </template> <style scoped> .appointment-form-container { max-width: 500px; margin: 20px auto; padding: 20px; border-radius: 8px; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); background-color: #fff; } h2 { text-align: center; color: #333; margin-bottom: 20px; } .appointment-form label { display: block; margin-bottom: 5px; color: #333; font-weight: bold; } .appointment-form input[type=\"text\"], .appointment-form input[type=\"datetime-local\"], .appointment-form select { width: 100%; padding: 10px; margin-bottom: 20px; border: 1px solid #ccc; border-radius: 4px; box-sizing: border-box; } .appointment-form input[type=\"submit\"] { width: 100%; padding: 10px 15px; background-color: #4CAF50; color: white; border: none; border-radius: 4px; cursor: pointer; font-size: 16px; transition: background-color 0.3s ease; } .appointment-form input[type=\"submit\"]:hover { background-color: #45a049; } </style> <script> import router from '@/router'; import axios from 'axios'; export default { data() { return { doctors: [], patients: [], cabinets: [], token: null, appointmentData: { date_time: '', diagnosis: '', current_condition: '', treatment_recommendations: '', doctor: '', patient: '', cabinet: '', }, }; }, mounted() { this.loginAndGetToken().then(() => { if (this.token) { this.getDoctors(); this.getPatients(); this.getCabinets(); } else { console.error('\u0422\u043e\u043a\u0435\u043d \u043d\u0435 \u043f\u043e\u043b\u0443\u0447\u0435\u043d. \u041f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435 \u0443\u0447\u0435\u0442\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438 \u043f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u0435 \u043f\u043e\u043f\u044b\u0442\u043a\u0443.'); } }); }, methods: { async loginAndGetToken() { try { const userData = JSON.parse(localStorage.getItem('userData')); if (!userData || !userData.username || !userData.password) { console.error('\u0414\u0430\u043d\u043d\u044b\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u044b \u0432 localStorage.'); return; } console.log('\u041e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 \u0434\u0430\u043d\u043d\u044b\u0445 \u0434\u043b\u044f \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438:', userData); const response = await axios.post('http://127.0.0.1:8000/auth/token/login/', { username: userData.username, password: userData.password, }); if (response.data && response.data.auth_token) { this.token = response.data.auth_token; } else { console.error('\u0422\u043e\u043a\u0435\u043d \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u0432 \u043e\u0442\u0432\u0435\u0442\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u0430:', response.data); } } catch (error) { console.error('\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0438 \u0442\u043e\u043a\u0435\u043d\u0430:', error.response ? error.response.data : error); } }, getDoctors() { axios.get('http://127.0.0.1:8000/api/doctors/', { headers: { Authorization: `Token ${this.token}` } }) .then(response => { this.doctors = response.data; }) .catch(error => { console.error('\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0438 \u0441\u043f\u0438\u0441\u043a\u0430 \u0432\u0440\u0430\u0447\u0435\u0439:', error); }); }, getPatients() { axios.get('http://127.0.0.1:8000/api/patients/', { headers: { Authorization: `Token ${this.token}` } }) .then(response => { this.patients = response.data; }) .catch(error => { console.error('\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0438 \u0441\u043f\u0438\u0441\u043a\u0430 \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u043e\u0432:', error); }); }, getCabinets() { axios.get('http://127.0.0.1:8000/api/cabinets/', { headers: { Authorization: `Token ${this.token}` } }) .then(response => { this.cabinets = response.data; }) .catch(error => { console.error('\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0438 \u0441\u043f\u0438\u0441\u043a\u0430 \u043a\u0430\u0431\u0438\u043d\u0435\u0442\u043e\u0432:', error); }); }, getProfile() { axios.get('http://127.0.0.1:8000/api/appointments/', { headers: { Authorization: `Token ${this.token}`, } }) .then(response => { this.date_time = response.data.date_time; this.diagnosis = response.data.diagnosis; this.current_condition = response.data.current_condition; this.treatment_recommendations = response.data.treatment_recommendations; this.doctor = response.data.doctor; this.patient = response.data.patient; this.cabinet = response.data.cabinet; this.saveProfile(); router.push('/registerdoctor'); }) .catch(error => { console.error('\u041e\u0448\u0438\u0431\u043a\u0430:', error); }); }, saveProfile() { console.log('\u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435:', this.appointmentData); axios.post('http://127.0.0.1:8000/api/appointments/', this.appointmentData, { headers: { Authorization: `Token ${this.token}` } }) .then(response => { this.date_time = response.data.date_time; this.diagnosis = response.data.diagnosis; this.current_condition = response.data.current_condition; this.treatment_recommendations = response.data.treatment_recommendations; this.doctor = response.doctor; this.patient = response.data.patient; this.cabinet = response.data.cabinet; }) .catch(error => { console.error('\u041e\u0448\u0438\u0431\u043a\u0430:', error); }) }, goto(){ router.push('/registerdoctor'); }, } } </script>","title":"MyAppointments.vue"},{"location":"page5/","text":"ListAppointment.vue <template> <div> <h2>\u0412\u0430\u0448\u0438 \u0437\u0430\u043f\u0438\u0441\u0438 \u043d\u0430 \u043f\u0440\u0438\u0435\u043c</h2> <ul v-if=\"appointments.length\"> <li v-for=\"(appointment, index) in appointments\" :key=\"index\"> <p>\u0414\u0430\u0442\u0430 \u0438 \u0432\u0440\u0435\u043c\u044f \u043f\u0440\u0438\u0435\u043c\u0430: {{ appointment.date_time }}</p> <p>\u0414\u0438\u0430\u0433\u043d\u043e\u0437: {{ appointment.diagnosis }}</p> <p>\u0422\u0435\u043a\u0443\u0449\u0435\u0435 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435: {{ appointment.current_condition }}</p> <p>\u0420\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0430\u0446\u0438\u0438 \u043f\u043e \u043b\u0435\u0447\u0435\u043d\u0438\u044e: {{ appointment.treatment_recommendations }}</p> <button @click=\"deleteAppointment(appointment.id)\">\u0423\u0434\u0430\u043b\u0438\u0442\u044c</button> </li> </ul> <p v-else>\u041d\u0435\u0442 \u0437\u0430\u043f\u0438\u0441\u0435\u0439</p> </div> </template> <style scoped> div { max-width: 600px; margin: 20px auto; padding: 20px; border-radius: 8px; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); background-color: #fff; } h2 { text-align: center; color: #333; margin-bottom: 20px; } ul { list-style-type: none; padding: 0; } li { border-bottom: 1px solid #eee; padding-bottom: 10px; margin-bottom: 10px; } li:last-child { border-bottom: none; } p { margin: 5px 0; color: #555; } p strong { color: #333; font-weight: bold; } p v-else { text-align: center; color: #666; } </style> <script> import axios from 'axios'; export default { data() { return { appointments: [], token: null } }, methods: { async loginAndGetToken() { try { const userData = JSON.parse(localStorage.getItem('userData')); if (!userData || !userData.username || !userData.password) { console.error('\u0414\u0430\u043d\u043d\u044b\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u044b \u0432 localStorage.'); return; } console.log('\u041e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 \u0434\u0430\u043d\u043d\u044b\u0445 \u0434\u043b\u044f \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438:', userData); const response = await axios.post('http://127.0.0.1:8000/auth/token/login/', { username: userData.username, password: userData.password, }); if (response.data && response.data.auth_token) { this.token = response.data.auth_token; } else { console.error('\u0422\u043e\u043a\u0435\u043d \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u0432 \u043e\u0442\u0432\u0435\u0442\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u0430:', response.data); } } catch (error) { console.error('\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0438 \u0442\u043e\u043a\u0435\u043d\u0430:', error.response ? error.response.data : error); } }, getProfile() { const userData = JSON.parse(localStorage.getItem('userData')); if (!userData || !userData.id) { console.error('\u0414\u0430\u043d\u043d\u044b\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u044b \u0432 localStorage.'); return; } const token = localStorage.getItem('authToken'); if (!token) { console.error('\u0422\u043e\u043a\u0435\u043d \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u0432 localStorage.'); return; } axios.get(`http://127.0.0.1:8000/api/appointments/?patient=${userData.id}`, { headers: { Authorization: `Token ${token}`, } }) .then(response => { this.appointments = response.data; }) .catch(error => { console.error('\u041e\u0448\u0438\u0431\u043a\u0430:', error); }); }, async deleteAppointment(appointmentId) { if (!this.token) { console.error('\u0422\u043e\u043a\u0435\u043d \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d'); return; } try { const response = await axios.delete(`http://127.0.0.1:8000/api/appointments/${appointmentId}/`, { headers: { Authorization: `Token ${this.token}` } }); if (response.status === 204) { this.appointments = this.appointments.filter(appointment => appointment.id !== appointmentId); } } catch (error) { console.error('\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0438 \u0437\u0430\u043f\u0438\u0441\u0438:', error); } }, }, mounted() { this.loginAndGetToken(); this.getProfile(); } } </script>","title":"ListAppointment.vue"},{"location":"page5/#listappointmentvue","text":"<template> <div> <h2>\u0412\u0430\u0448\u0438 \u0437\u0430\u043f\u0438\u0441\u0438 \u043d\u0430 \u043f\u0440\u0438\u0435\u043c</h2> <ul v-if=\"appointments.length\"> <li v-for=\"(appointment, index) in appointments\" :key=\"index\"> <p>\u0414\u0430\u0442\u0430 \u0438 \u0432\u0440\u0435\u043c\u044f \u043f\u0440\u0438\u0435\u043c\u0430: {{ appointment.date_time }}</p> <p>\u0414\u0438\u0430\u0433\u043d\u043e\u0437: {{ appointment.diagnosis }}</p> <p>\u0422\u0435\u043a\u0443\u0449\u0435\u0435 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435: {{ appointment.current_condition }}</p> <p>\u0420\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0430\u0446\u0438\u0438 \u043f\u043e \u043b\u0435\u0447\u0435\u043d\u0438\u044e: {{ appointment.treatment_recommendations }}</p> <button @click=\"deleteAppointment(appointment.id)\">\u0423\u0434\u0430\u043b\u0438\u0442\u044c</button> </li> </ul> <p v-else>\u041d\u0435\u0442 \u0437\u0430\u043f\u0438\u0441\u0435\u0439</p> </div> </template> <style scoped> div { max-width: 600px; margin: 20px auto; padding: 20px; border-radius: 8px; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); background-color: #fff; } h2 { text-align: center; color: #333; margin-bottom: 20px; } ul { list-style-type: none; padding: 0; } li { border-bottom: 1px solid #eee; padding-bottom: 10px; margin-bottom: 10px; } li:last-child { border-bottom: none; } p { margin: 5px 0; color: #555; } p strong { color: #333; font-weight: bold; } p v-else { text-align: center; color: #666; } </style> <script> import axios from 'axios'; export default { data() { return { appointments: [], token: null } }, methods: { async loginAndGetToken() { try { const userData = JSON.parse(localStorage.getItem('userData')); if (!userData || !userData.username || !userData.password) { console.error('\u0414\u0430\u043d\u043d\u044b\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u044b \u0432 localStorage.'); return; } console.log('\u041e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 \u0434\u0430\u043d\u043d\u044b\u0445 \u0434\u043b\u044f \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438:', userData); const response = await axios.post('http://127.0.0.1:8000/auth/token/login/', { username: userData.username, password: userData.password, }); if (response.data && response.data.auth_token) { this.token = response.data.auth_token; } else { console.error('\u0422\u043e\u043a\u0435\u043d \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u0432 \u043e\u0442\u0432\u0435\u0442\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u0430:', response.data); } } catch (error) { console.error('\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0438 \u0442\u043e\u043a\u0435\u043d\u0430:', error.response ? error.response.data : error); } }, getProfile() { const userData = JSON.parse(localStorage.getItem('userData')); if (!userData || !userData.id) { console.error('\u0414\u0430\u043d\u043d\u044b\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u044b \u0432 localStorage.'); return; } const token = localStorage.getItem('authToken'); if (!token) { console.error('\u0422\u043e\u043a\u0435\u043d \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u0432 localStorage.'); return; } axios.get(`http://127.0.0.1:8000/api/appointments/?patient=${userData.id}`, { headers: { Authorization: `Token ${token}`, } }) .then(response => { this.appointments = response.data; }) .catch(error => { console.error('\u041e\u0448\u0438\u0431\u043a\u0430:', error); }); }, async deleteAppointment(appointmentId) { if (!this.token) { console.error('\u0422\u043e\u043a\u0435\u043d \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d'); return; } try { const response = await axios.delete(`http://127.0.0.1:8000/api/appointments/${appointmentId}/`, { headers: { Authorization: `Token ${this.token}` } }); if (response.status === 204) { this.appointments = this.appointments.filter(appointment => appointment.id !== appointmentId); } } catch (error) { console.error('\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0438 \u0437\u0430\u043f\u0438\u0441\u0438:', error); } }, }, mounted() { this.loginAndGetToken(); this.getProfile(); } } </script>","title":"ListAppointment.vue"},{"location":"page6/","text":"TheWelcome.vue <template> <div class=\"container\"> <img alt=\"Vue logo\" class=\"logo\" src=\"@/assets/logo.png\" /> <div class=\"content\"> <h1>\u0414\u043e\u0431\u0440\u043e \u043f\u043e\u0436\u0430\u043b\u043e\u0432\u0430\u0442\u044c!</h1> <button @click=\"loginAsPatient\">\u0412\u043e\u0439\u0442\u0438 \u043a\u0430\u043a \u043f\u0430\u0446\u0438\u0435\u043d\u0442</button> </div> </div> </template> <script> import EnterPatientView from '../views/EnterPatientView.vue'; export default { methods: { loginAsPatient() { console.log('\u0412\u0445\u043e\u0434 \u043a\u0430\u043a \u043f\u0430\u0446\u0438\u0435\u043d\u0442'); this.$router.push({ path: '/enterpatient', name: 'enterpatient', component: EnterPatientView }); }, }, }; </script> <style scoped> .container { text-align: center; padding: 20px; } .logo { width: 180px; height: 150px; margin-bottom: 20px; } .content { background-color: #f9f9f9; padding: 20px; border-radius: 10px; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); display: inline-block; } h1 { color: #333; margin-bottom: 20px; } button { background-color: #4CAF50; color: white; padding: 10px 20px; border: none; border-radius: 5px; cursor: pointer; font-size: 16px; transition: background-color 0.3s; } button:hover { background-color: #45a049; } </style>","title":"TheWelcome.vue"},{"location":"page6/#thewelcomevue","text":"<template> <div class=\"container\"> <img alt=\"Vue logo\" class=\"logo\" src=\"@/assets/logo.png\" /> <div class=\"content\"> <h1>\u0414\u043e\u0431\u0440\u043e \u043f\u043e\u0436\u0430\u043b\u043e\u0432\u0430\u0442\u044c!</h1> <button @click=\"loginAsPatient\">\u0412\u043e\u0439\u0442\u0438 \u043a\u0430\u043a \u043f\u0430\u0446\u0438\u0435\u043d\u0442</button> </div> </div> </template> <script> import EnterPatientView from '../views/EnterPatientView.vue'; export default { methods: { loginAsPatient() { console.log('\u0412\u0445\u043e\u0434 \u043a\u0430\u043a \u043f\u0430\u0446\u0438\u0435\u043d\u0442'); this.$router.push({ path: '/enterpatient', name: 'enterpatient', component: EnterPatientView }); }, }, }; </script> <style scoped> .container { text-align: center; padding: 20px; } .logo { width: 180px; height: 150px; margin-bottom: 20px; } .content { background-color: #f9f9f9; padding: 20px; border-radius: 10px; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); display: inline-block; } h1 { color: #333; margin-bottom: 20px; } button { background-color: #4CAF50; color: white; padding: 10px 20px; border: none; border-radius: 5px; cursor: pointer; font-size: 16px; transition: background-color 0.3s; } button:hover { background-color: #45a049; } </style>","title":"TheWelcome.vue"},{"location":"page7/","text":"EnterPatirnt.vue <template> <div class=\"login-container\"> <h2>\u0412\u043e\u0439\u0442\u0438 \u043a\u0430\u043a \u043f\u0430\u0446\u0438\u0435\u043d\u0442</h2> <form @submit=\"login\" class=\"login-form\"> <div class=\"form-field\"> <label for=\"username\">\u0418\u043c\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f:</label> <input type=\"text\" id=\"username\" v-model=\"username\" required> </div> <div class=\"form-field\"> <label for=\"password\">\u041f\u0430\u0440\u043e\u043b\u044c:</label> <input type=\"password\" id=\"password\" v-model=\"password\" required> </div> <button type=\"submit\" class=\"submit-btn\">\u0412\u043e\u0439\u0442\u0438</button> </form> <div class=\"register-link\"> <h3>\u0415\u0449\u0435 \u043d\u0435 \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u044b?</h3> <button><router-link to=\"/registerpatient\">\u0417\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043a\u0430\u043a \u043f\u0430\u0446\u0438\u0435\u043d\u0442</router-link></button> </div> </div> </template> <style scoped> .login-container { max-width: 400px; margin: 20px auto; padding: 20px; border-radius: 8px; box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); background-color: #fff; } h2, h3 { text-align: center; } .login-form .form-field { margin-bottom: 15px; } .login-form label { display: block; margin-bottom: 5px; font-weight: bold; } .login-form input { width: 100%; padding: 10px; border: 1px solid #ddd; border-radius: 4px; box-sizing: border-box; } .submit-btn { width: 100%; padding: 10px 15px; background-color: #4CAF50; color: white; border: none; border-radius: 4px; cursor: pointer; font-size: 16px; transition: background-color 0.3s ease; } .submit-btn:hover { background-color: #45a049; } .register-link { text-align: center; margin-top: 20px; } .register-link button { background: none; border: none; padding: 0; } .register-link a { color: #4CAF50; text-decoration: none; } </style> <script> import axios from 'axios'; import { ref } from 'vue'; import { useRouter } from 'vue-router'; export default { setup() { const username = ref(''); const password = ref(''); const router = useRouter(); const login = async (event) => { event.preventDefault(); try { const response = await axios.post('http://127.0.0.1:8000/auth/token/login/', { username: username.value, password: password.value, }); if (response.data && response.data.auth_token) { localStorage.setItem('authToken', response.data.auth_token); router.push('/main'); } } catch (error) { if (error.response && error.response.status === 400) { if (error.response.data.non_field_errors) { const errorMessage = error.response.data.non_field_errors[0]; if (errorMessage == 'Unable to log in with provided credentials.') { alert('\u041d\u0435\u0432\u0435\u0440\u043d\u044b\u0439 \u043f\u0430\u0440\u043e\u043b\u044c'); } else { console.log('\u041e\u0448\u0438\u0431\u043a\u0430:', errorMessage); } } else { console.log('\u041e\u0448\u0438\u0431\u043a\u0430 \u0441\u0442\u0430\u0442\u0443\u0441\u0430 400:', error.response.data); } } else { console.log('\u0414\u0440\u0443\u0433\u0430\u044f \u043e\u0448\u0438\u0431\u043a\u0430:', error); } } }; return { username, password, login }; } }; </script>","title":"EnterPatirnt.vue"},{"location":"page7/#enterpatirntvue","text":"<template> <div class=\"login-container\"> <h2>\u0412\u043e\u0439\u0442\u0438 \u043a\u0430\u043a \u043f\u0430\u0446\u0438\u0435\u043d\u0442</h2> <form @submit=\"login\" class=\"login-form\"> <div class=\"form-field\"> <label for=\"username\">\u0418\u043c\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f:</label> <input type=\"text\" id=\"username\" v-model=\"username\" required> </div> <div class=\"form-field\"> <label for=\"password\">\u041f\u0430\u0440\u043e\u043b\u044c:</label> <input type=\"password\" id=\"password\" v-model=\"password\" required> </div> <button type=\"submit\" class=\"submit-btn\">\u0412\u043e\u0439\u0442\u0438</button> </form> <div class=\"register-link\"> <h3>\u0415\u0449\u0435 \u043d\u0435 \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u044b?</h3> <button><router-link to=\"/registerpatient\">\u0417\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043a\u0430\u043a \u043f\u0430\u0446\u0438\u0435\u043d\u0442</router-link></button> </div> </div> </template> <style scoped> .login-container { max-width: 400px; margin: 20px auto; padding: 20px; border-radius: 8px; box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); background-color: #fff; } h2, h3 { text-align: center; } .login-form .form-field { margin-bottom: 15px; } .login-form label { display: block; margin-bottom: 5px; font-weight: bold; } .login-form input { width: 100%; padding: 10px; border: 1px solid #ddd; border-radius: 4px; box-sizing: border-box; } .submit-btn { width: 100%; padding: 10px 15px; background-color: #4CAF50; color: white; border: none; border-radius: 4px; cursor: pointer; font-size: 16px; transition: background-color 0.3s ease; } .submit-btn:hover { background-color: #45a049; } .register-link { text-align: center; margin-top: 20px; } .register-link button { background: none; border: none; padding: 0; } .register-link a { color: #4CAF50; text-decoration: none; } </style> <script> import axios from 'axios'; import { ref } from 'vue'; import { useRouter } from 'vue-router'; export default { setup() { const username = ref(''); const password = ref(''); const router = useRouter(); const login = async (event) => { event.preventDefault(); try { const response = await axios.post('http://127.0.0.1:8000/auth/token/login/', { username: username.value, password: password.value, }); if (response.data && response.data.auth_token) { localStorage.setItem('authToken', response.data.auth_token); router.push('/main'); } } catch (error) { if (error.response && error.response.status === 400) { if (error.response.data.non_field_errors) { const errorMessage = error.response.data.non_field_errors[0]; if (errorMessage == 'Unable to log in with provided credentials.') { alert('\u041d\u0435\u0432\u0435\u0440\u043d\u044b\u0439 \u043f\u0430\u0440\u043e\u043b\u044c'); } else { console.log('\u041e\u0448\u0438\u0431\u043a\u0430:', errorMessage); } } else { console.log('\u041e\u0448\u0438\u0431\u043a\u0430 \u0441\u0442\u0430\u0442\u0443\u0441\u0430 400:', error.response.data); } } else { console.log('\u0414\u0440\u0443\u0433\u0430\u044f \u043e\u0448\u0438\u0431\u043a\u0430:', error); } } }; return { username, password, login }; } }; </script>","title":"EnterPatirnt.vue"},{"location":"page8/","text":"RegisterPatient.vue <template> <div class=\"register\"> <h1>\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f</h1> <form @submit=\"registerPatient\" style=\"margin-top: 20px;\"> <div class=\"form-group\"> <label for=\"email\">Email</label> <input type=\"email\" id=\"email\" v-model=\"email\" required> </div> <div class=\"form-group\"> <label for=\"username\">\u0418\u043c\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f</label> <input type=\"text\" id=\"username\" v-model=\"username\" required> </div> <div class=\"form-group\"> <label for=\"password\">\u041f\u0430\u0440\u043e\u043b\u044c</label> <input type=\"password\" id=\"password\" v-model=\"password\" required> <small>\u041f\u0430\u0440\u043e\u043b\u044c \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u043d\u0435 \u043c\u0435\u043d\u0435\u0435 8 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u044c \u0437\u0430\u0433\u043b\u0430\u0432\u043d\u044b\u0435 \u0438 \u0441\u0442\u0440\u043e\u0447\u043d\u044b\u0435 \u0431\u0443\u043a\u0432\u044b \u0438 \u0446\u0438\u0444\u0440\u044b</small> </div> <button type=\"submit\">\u0417\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f</button> </form> </div> </template> <style scoped> .register { max-width: 400px; margin: 40px auto; padding: 20px; border-radius: 8px; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); background-color: #fff; } .register-form { display: flex; flex-direction: column; } h1 { text-align: center; color: #333; } .form-group { margin-bottom: 15px; } label { display: block; margin-bottom: 5px; color: #333; font-weight: bold; } input[type=\"email\"], input[type=\"text\"], input[type=\"password\"] { width: 100%; padding: 8px; border: 1px solid #ccc; border-radius: 4px; box-sizing: border-box; } small { display: block; margin-top: 5px; color: #666; } button { padding: 10px 15px; background-color: #4CAF50; color: white; border: none; border-radius: 4px; cursor: pointer; font-size: 16px; transition: background-color 0.3s ease; } button:hover { background-color: #45a049; } </style> <script> import axios from 'axios'; import router from '@/router'; export default { data() { return { email: '', username: '', password: '', }; }, methods: { registerPatient(event) { event.preventDefault(); const formData = { email: this.email, username: this.username, password: this.password, }; axios.post('http://127.0.0.1:8000/auth/users/', formData) .then(response => { console.log(response.data); localStorage.setItem('userData', JSON.stringify(formData)); router.push('/profilepatient'); }) .catch(error => { if (error.response.status === 400) { alert('\u0422\u0430\u043a\u043e\u0439 email \u0443\u0436\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f'); } else { console.log(error); } }); }, }, }; </script>","title":"RegisterPatient.vue"},{"location":"page8/#registerpatientvue","text":"<template> <div class=\"register\"> <h1>\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f</h1> <form @submit=\"registerPatient\" style=\"margin-top: 20px;\"> <div class=\"form-group\"> <label for=\"email\">Email</label> <input type=\"email\" id=\"email\" v-model=\"email\" required> </div> <div class=\"form-group\"> <label for=\"username\">\u0418\u043c\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f</label> <input type=\"text\" id=\"username\" v-model=\"username\" required> </div> <div class=\"form-group\"> <label for=\"password\">\u041f\u0430\u0440\u043e\u043b\u044c</label> <input type=\"password\" id=\"password\" v-model=\"password\" required> <small>\u041f\u0430\u0440\u043e\u043b\u044c \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u043d\u0435 \u043c\u0435\u043d\u0435\u0435 8 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u044c \u0437\u0430\u0433\u043b\u0430\u0432\u043d\u044b\u0435 \u0438 \u0441\u0442\u0440\u043e\u0447\u043d\u044b\u0435 \u0431\u0443\u043a\u0432\u044b \u0438 \u0446\u0438\u0444\u0440\u044b</small> </div> <button type=\"submit\">\u0417\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f</button> </form> </div> </template> <style scoped> .register { max-width: 400px; margin: 40px auto; padding: 20px; border-radius: 8px; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); background-color: #fff; } .register-form { display: flex; flex-direction: column; } h1 { text-align: center; color: #333; } .form-group { margin-bottom: 15px; } label { display: block; margin-bottom: 5px; color: #333; font-weight: bold; } input[type=\"email\"], input[type=\"text\"], input[type=\"password\"] { width: 100%; padding: 8px; border: 1px solid #ccc; border-radius: 4px; box-sizing: border-box; } small { display: block; margin-top: 5px; color: #666; } button { padding: 10px 15px; background-color: #4CAF50; color: white; border: none; border-radius: 4px; cursor: pointer; font-size: 16px; transition: background-color 0.3s ease; } button:hover { background-color: #45a049; } </style> <script> import axios from 'axios'; import router from '@/router'; export default { data() { return { email: '', username: '', password: '', }; }, methods: { registerPatient(event) { event.preventDefault(); const formData = { email: this.email, username: this.username, password: this.password, }; axios.post('http://127.0.0.1:8000/auth/users/', formData) .then(response => { console.log(response.data); localStorage.setItem('userData', JSON.stringify(formData)); router.push('/profilepatient'); }) .catch(error => { if (error.response.status === 400) { alert('\u0422\u0430\u043a\u043e\u0439 email \u0443\u0436\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f'); } else { console.log(error); } }); }, }, }; </script>","title":"RegisterPatient.vue"}]}